# numpy 이해하기
import numpy as np

a = np.array(((11, 12, 13), (21, 22, 23), (31, 32, 33)))
print(a)
# [[11 12 13]
#  [21 22 23]
#  [31 32 33]]

print(a.ndim)   # 차원 수 출력
# 2

x = np.array([1, 2, 3])
y = np.array([3, 4, 5])
print(x)
# [1 2 3]

print(x*2)
# [2 4 6]

print(x + 10)
# [11 12 13]

print(np.sqrt(x))
# [1.         1.41421356 1.73205081]

print(np.cos(x))
# [ 0.54030231 -0.41614684 -0.9899925 ]

print(x - y)
# [-2 -2 -2]

# where함수는 조건문을 사용할때입니다. 출력은 근본적으로는 인덱스입니다.
# 2보다 작은 것을 찾아 x인 상태로 두고 나머지는 5로 변경
print(np.where(x < 2, x, 5))
# [ 1 10 10]

# 행렬 만들기
m = np.matrix([x, y, x])
print(m)
# [[1 2 3]
#  [3 4 5]
#  [1 2 3]]

# 전치행렬 만들기
print(m.T)
# [[1 3 1]
#  [2 4 2]
#  [3 5 3]]

# 10 X 10 0으로 채워진 행렬 생성
grid1 = np.zeros(shape=(10, 10), dtype=float)
print(grid1)
# [[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]

# 10 X 10 1로 채워진 행렬 생성
grid2 = np.ones(shape=(10, 10), dtype=float)
print(grid2)
# [[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]